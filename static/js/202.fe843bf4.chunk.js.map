{"version":3,"file":"static/js/202.fe843bf4.chunk.js","mappings":"yQAEaA,E,OAAiBC,GAAAA,IAAH,4G,SCMZ,SAASC,EAAT,GAAuC,EAAdC,WAAe,IAAD,IACpD,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,MAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,MAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,MAArC,eAAOS,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAGFE,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAmBzC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEQC,EAAAA,GAAkBR,GAF1B,cAEJS,EAFI,OAGVlB,EAAQkB,EAAIC,OACZjB,EAAUgB,EAAIE,aACdhB,EAAaiB,KAAKC,MAAyB,GAAnBJ,EAAIK,eAC5BjB,EAAYY,EAAIb,UAChBG,EAAUU,EAAIX,OAAOiB,KAAI,SAAAC,GAAI,OAAIA,EAAK1B,IAAT,IAAe2B,KAAK,MAPvC,qDAUVC,QAAQC,IAAR,MAVU,0DAAH,qDAaXZ,GACD,GAAE,CAACP,KAGF,6BACE,SAAC,KAAD,CAAMoB,GAAIlB,EAAV,6BACA,UAACjB,EAAD,YACE,0BACE,gBACEoC,IAAG,6CAAwC7B,GAC3C8B,IAAKhC,EACLiC,MAAM,MACNC,OAAO,WAGX,4BACE,+BAAKlC,QAAL,IAAKA,EAAAA,EAAQ,UACb,+CAAgBI,QAAhB,IAAgBA,EAAAA,EAAa,EAA7B,QACA,sCACA,8BAAIE,QAAJ,IAAIA,EAAAA,EAAY,cAChB,oCACA,8BAAIE,QAAJ,IAAIA,EAAAA,EAAU,kBAGlB,mBACA,4BACE,0BACE,SAAC,KAAD,CAAMsB,GAAG,OAAOhB,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,0BACE,SAAC,KAAD,CAAMkB,GAAG,UAAUhB,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,EAAAuB,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,QAIP,C,+LCzEKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,oCAAuCD,IAD7B,cACtBlB,EADsB,yBAErBA,EAAIqB,MAFiB,2CAAH,qDAKdC,EAAa,mCAAG,WAAM/B,GAAN,uFACT4B,EAAAA,EAAAA,IAAA,iBAAoB5B,EAApB,oBAAkC2B,IADzB,cACrBlB,EADqB,yBAEpBA,EAAIqB,MAFgB,2CAAH,sDAKbE,EAAgB,mCAAG,WAAMtB,GAAN,uFACZkB,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BjB,IAFd,cACxBD,EADwB,yBAIvBA,EAAIqB,MAJmB,2CAAH,sDAOhBG,EAAS,mCAAG,WAAMjC,GAAN,uFACL4B,EAAAA,EAAAA,IAAA,iBACN5B,EADM,4BACgB2B,EADhB,oBADK,cACjBlB,EADiB,yBAIhBA,EAAIqB,MAJY,2CAAH,sDAOTI,EAAY,mCAAG,WAAMlC,GAAN,uFACR4B,EAAAA,EAAAA,IAAA,iBACN5B,EADM,4BACgB2B,EADhB,2BADQ,cACpBlB,EADoB,yBAInBA,EAAIqB,MAJe,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 60px;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet, Link, useParams, useLocation } from 'react-router-dom';\n\nimport * as API from 'services/api';\nimport { MovieContainer } from './MovieDetails.styled';\n\nexport default function MoviesDetails({ movieTitle }) {\n  const [name, setName] = useState(null);\n  const [imgUrl, setImgUrl] = useState(null);\n  const [userScore, setUserScore] = useState(null);\n  const [overview, setOverview] = useState(null);\n  const [genres, setGenres] = useState(null);\n\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.searchMovieId(id);\n        setName(res.title);\n        setImgUrl(res.poster_path);\n        setUserScore(Math.round(res.vote_average * 10));\n        setOverview(res.overview);\n        setGenres(res.genres.map(item => item.name).join(' '));\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <main>\n      <Link to={backLink}>Back to Movies</Link>\n      <MovieContainer>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/original${imgUrl}`}\n            alt={name}\n            width=\"200\"\n            height=\"300\"\n          />\n        </div>\n        <div>\n          <h2>{name ?? 'Name'}</h2>\n          <p>User Score: {userScore ?? 0}%</p>\n          <h3>Overview</h3>\n          <p>{overview ?? 'Overview'}</p>\n          <h3>Genres</h3>\n          <p>{genres ?? 'Genres'}</p>\n        </div>\n      </MovieContainer>\n      <hr />\n      <div>\n        <div>\n          <Link to=\"cast\" state={{ from: backLink }}>\n            Cast\n          </Link>\n        </div>\n        <div>\n          <Link to=\"reviews\" state={{ from: backLink }}>\n            Reviews\n          </Link>\n        </div>\n      </div>\n      <Suspense fallback={<div>Loading....</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3217ae06898d6f0a1d4d89e84bb85582';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["MovieContainer","styled","MoviesDetails","movieTitle","useState","name","setName","imgUrl","setImgUrl","userScore","setUserScore","overview","setOverview","genres","setGenres","id","useParams","backLink","useLocation","state","from","useEffect","fetch","API","res","title","poster_path","Math","round","vote_average","map","item","join","console","log","to","src","alt","width","height","Suspense","fallback","API_KEY","axios","searchTrending","data","searchMovieId","searchMovieTitle","castMovie","reviewsMovie"],"sourceRoot":""}