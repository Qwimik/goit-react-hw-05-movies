{"version":3,"file":"static/js/532.5b623d28.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/TrendingList/TrendingList.styled.jsx","components/TrendingList/TrendingList.jsx","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  list-style: none;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n  box-shadow: 0px 0px 4px #242424;\n  overflow: hidden;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const TextContainer = styled.div`\n  padding: 0 20px 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Author = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nexport const NoResult = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n`;\n\nexport const Movie = styled.li`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  text-align: center;\n`;\n\nexport const LinkMovie = styled(Link)`\n  text-decoration: none;\n  color: #242424;\n  transition: color 250ms ease-in-out;\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  transition: box-shadow 250ms ease-in-out;\n  &:hover {\n    box-shadow: 0px 0px 15px orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  padding: 10px;\n  margin: 0;\n  background-color: #f8f8f8;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Container } from 'components/App/App.styled';\nimport {\n  MoviesList,\n  Movie,\n  LinkMovie,\n  MovieWrapper,\n  Text,\n} from './TrendingList.styled';\n\nexport default function TrendingList({ items }) {\n  const location = useLocation();\n  let count = 0;\n\n  return (\n    <Container>\n      <MoviesList>\n        {items.map(item => {\n          return (\n            <Movie key={item.id}>\n              <LinkMovie to={`/movies/${item.id}`} state={{ from: location }}>\n                <MovieWrapper>\n                  <div>\n                    <img\n                      loading=\"lazy\"\n                      src={\n                        item.poster_path\n                          ? `https://image.tmdb.org/t/p/original${item.poster_path}`\n                          : `https://picsum.photos/200/300?random=${(count += 1)}`\n                      }\n                      alt={item.title ?? item.name ?? item.original_title}\n                      width=\"200\"\n                      height=\"300\"\n                    />\n                  </div>\n                  <Text>\n                    {item.title ?? item.name ?? item.original_title ?? 'Title'}\n                  </Text>\n                </MovieWrapper>\n              </LinkMovie>\n            </Movie>\n          );\n        })}\n      </MoviesList>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 30px 0;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  width: 250px;\n  border: 1px solid #909090;\n  border-radius: 20px;\n  outline: none;\n  font-size: 16px;\n  color: #242424;\n  padding: 10px 30px;\n  padding-right: 80px;\n  transition: box-shadow 250ms ease-in-out, border-color 250ms ease-in-out;\n  &:focus-within {\n    box-shadow: 0px 0px 5px orangered;\n    border-color: orangered;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translate(-50%, 60%);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  background-color: transparent;\n  font-size: 16px;\n  color: #909090;\n  transition: color 250ms ease-in-out;\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { FormWrapper, Form, Input, Button } from './SearchMovie.styled';\n\nexport default function SearchMovie({ title, onChange, onSubmit }) {\n  return (\n    <FormWrapper>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          name=\"title\"\n          autoComplete=\"off\"\n          value={title}\n          onChange={onChange}\n          autoFocus\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </FormWrapper>\n  );\n}\n","import SearchMovie from 'components/SearchMovie';\nimport TrendingList from 'components/TrendingList';\nimport { Container } from 'components/App/App.styled';\nimport { NoResult } from 'components/Reviews/Reviews.styled';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport * as API from 'services/api';\n\nexport default function Movies() {\n  const [title, setTitle] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieTitle = searchParams.get('title') ?? '';\n\n  useEffect(() => {\n    if (!movieTitle) return;\n    const fetch = async () => {\n      try {\n        const res = await API.searchMovieTitle(movieTitle);\n        setMovies(res.results);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [movieTitle]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert('bad 404');\n      return;\n    }\n    const nextParams = title !== '' ? { title } : {};\n    setSearchParams(nextParams);\n    setTitle('');\n  };\n\n  const onChange = e => {\n    setTitle(e.target.value);\n  };\n  return (\n    <main>\n      <Container>\n        <SearchMovie title={title} onChange={onChange} onSubmit={onSubmit} />\n        {movies.length > 0 ? (\n          <TrendingList items={movies} />\n        ) : (\n          <NoResult>Please, enter your request.</NoResult>\n        )}\n      </Container>\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3217ae06898d6f0a1d4d89e84bb85582';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["ReviewWrapper","styled","ReviewList","Review","TextContainer","Author","NoResult","MoviesList","Movie","LinkMovie","Link","MovieWrapper","Text","TrendingList","items","location","useLocation","count","map","item","to","id","state","from","loading","src","poster_path","alt","title","name","original_title","width","height","FormWrapper","Form","Input","Button","SearchMovie","onChange","onSubmit","type","autoComplete","value","autoFocus","Movies","useState","setTitle","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieTitle","get","useEffect","fetch","API","res","results","console","log","e","target","preventDefault","trim","alert","length","API_KEY","axios","searchTrending","data","searchMovieId","searchMovieTitle","castMovie","reviewsMovie"],"sourceRoot":""}