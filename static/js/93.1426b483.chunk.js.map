{"version":3,"file":"static/js/93.1426b483.chunk.js","mappings":"yRAEaA,EAAWC,EAAAA,GAAAA,GAAH,0JAURC,EAAaD,EAAAA,GAAAA,GAAH,yQAaVE,EAAoBF,EAAAA,GAAAA,IAAH,+IAQjBG,EAAWH,EAAAA,GAAAA,KAAH,6CAIRI,EAAWJ,EAAAA,GAAAA,KAAH,0G,mBCvBN,SAASK,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACJE,EAAQ,EAeZ,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEQC,EAAAA,GAAcL,GAFtB,cAEJM,EAFI,OAGVP,EAAQO,EAAIR,MAHF,mDAMVS,QAAQC,IAAR,MANU,yDAAH,qDASXJ,GACD,GAAE,CAACJ,KAGF,yBACGF,EAAKW,OAAS,GACb,SAACnB,EAAD,UACGQ,EAAKY,KAAI,SAAAC,GAAI,iBACZ,UAACnB,EAAD,YACE,gBACEoB,IACED,EAAKE,aAAL,6CAC0CF,EAAKE,cAD/C,+CAE6CX,GAAS,GAExDY,IAAKH,EAAKI,UAAYJ,EAAKI,UAAYJ,EAAKK,cAC5CC,MAAM,SAER,UAACxB,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,8BAAWgB,EAAKO,YAAhB,QAAwBP,EAAKK,qBAA7B,QAA8C,UAC9C,SAACtB,EAAD,yBACA,SAACC,EAAD,UACGgB,EAAKI,UACFJ,EAAKI,UADR,UAEGJ,EAAKK,qBAFR,QAEyB,mBAjBfL,EAAKQ,QADV,OAyBhB,SAAC,KAAD,0BAIP,C,mNC/DYC,EAAgB7B,EAAAA,GAAAA,IAAH,8FAMb8B,EAAa9B,EAAAA,GAAAA,GAAH,4HAQV+B,EAAS/B,EAAAA,GAAAA,GAAH,qNAWNgC,EAAgBhC,EAAAA,GAAAA,IAAH,8GAObiC,EAASjC,EAAAA,GAAAA,KAAH,gGAMNkC,EAAWlC,EAAAA,GAAAA,EAAH,uF,mMCrCfmC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAc,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cACtBpB,EADsB,yBAErBA,EAAIuB,MAFiB,2CAAH,qDAKdC,EAAa,mCAAG,WAAM9B,GAAN,uFACT2B,EAAAA,EAAAA,IAAA,iBAAoB3B,EAApB,oBAAkC0B,IADzB,cACrBpB,EADqB,yBAEpBA,EAAIuB,MAFgB,2CAAH,sDAKbE,EAAgB,mCAAG,WAAMC,GAAN,uFACZL,EAAAA,EAAAA,IAAA,gCACSD,EADT,kBAC0BM,IAFd,cACxB1B,EADwB,yBAIvBA,EAAIuB,MAJmB,2CAAH,sDAOhBI,EAAS,mCAAG,WAAMjC,GAAN,uFACL2B,EAAAA,EAAAA,IAAA,iBACN3B,EADM,4BACgB0B,EADhB,oBADK,cACjBpB,EADiB,yBAIhBA,EAAIuB,MAJY,2CAAH,sDAOTK,EAAY,mCAAG,WAAMlC,GAAN,uFACR2B,EAAAA,EAAAA,IAAA,iBACN3B,EADM,4BACgB0B,EADhB,2BADQ,cACpBpB,EADoB,yBAInBA,EAAIuB,MAJe,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastPerson = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 5px;\n  box-shadow: 0px 0px 4px #242424;\n  max-width: 150px;\n  color: #242424;\n  font-size: 14px;\n`;\n\nexport const CastTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 10px;\n`;\n\nexport const CastDesr = styled.span`\n  font-weight: 300;\n`;\n\nexport const CastName = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  margin: 5px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { NoResult } from 'components/Reviews/Reviews.styled';\nimport {\n  CastList,\n  CastPerson,\n  CastTextContainer,\n  CastName,\n  CastDesr,\n} from './Cast.styled';\n\nimport * as API from 'services/api';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  let count = 0;\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.castMovie(id);\n        setCast(res.cast);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(item => (\n            <CastPerson key={item.cast_id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original${item.profile_path}`\n                    : `https://picsum.photos/200/300?random=${(count += 1)}`\n                }\n                alt={item.character ? item.character : item.original_name}\n                width=\"150\"\n              />\n              <CastTextContainer>\n                <CastDesr>Name</CastDesr>\n                <CastName>{item.name ?? item.original_name ?? 'Name'}</CastName>\n                <CastDesr>Character</CastDesr>\n                <CastName>\n                  {item.character\n                    ? item.character\n                    : item.original_name ?? 'Character'}\n                </CastName>\n              </CastTextContainer>\n            </CastPerson>\n          ))}\n        </CastList>\n      ) : (\n        <NoResult>No results</NoResult>\n      )}\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ReviewWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  list-style: none;\n  max-width: 100%;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n  box-shadow: 0px 0px 4px #242424;\n  overflow: hidden;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const TextContainer = styled.div`\n  padding: 0 20px 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Author = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nexport const NoResult = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3217ae06898d6f0a1d4d89e84bb85582';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["CastList","styled","CastPerson","CastTextContainer","CastDesr","CastName","Cast","useState","cast","setCast","id","useParams","count","useEffect","fetch","API","res","console","log","length","map","item","src","profile_path","alt","character","original_name","width","name","cast_id","ReviewWrapper","ReviewList","Review","TextContainer","Author","NoResult","API_KEY","axios","searchTrending","data","searchMovieId","searchMovieTitle","title","castMovie","reviewsMovie"],"sourceRoot":""}